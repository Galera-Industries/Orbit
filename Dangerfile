require 'json'
require 'octokit'

$client = Octokit::Client.new(access_token: ENV['GIST_TOKEN'])
$gist_id = ENV['DANGER_STATE_GIST_ID']

def load_state
  begin
    gist = $client.gist($gist_id)
    content = gist.files["state.json"].content
    JSON.parse(content)
  rescue => e
    puts "WARN: –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑ Gist: #{e.message}"
    { "pushers" => [] }
  end
end

def save_state(state)
  content = JSON.pretty_generate(state)
  begin
    $client.edit_gist($gist_id, files: { "state.json" => { content: content } })
    puts "DEBUG: –°–æ—Å—Ç–æ—è–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ Gist."
  rescue => e
    puts "ERROR: –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ Gist: #{e.message}"
  end
end

def increment_pr_count(user_login)
  state = load_state
  pushers = state["pushers"]

  user = pushers.find { |u| u["name"] == user_login }

  if user
    user["pr_count"] += 1
  else
    user = { "name" => user_login, "pr_count" => 1 }
    pushers << user
  end

  save_state(state)
  user["pr_count"]
end

def get_cur_pr_count(user_login)
  state = load_state
  pushers = state["pushers"]
  user = pushers.find { |u| u["name"] == user_login }

  user ? user["pr_count"] + 1 : 1
end

def check_for_fun_metrics
  edited = git.modified_files + git.added_files

  additions = github.pr_json[:additions] || 0
  deletions = github.pr_json[:deletions] || 0
  commits = github.pr_json[:commits] || 0
  files_changed = github.pr_json[:changed_files] || 0
  total_lines = deletions + additions

  pr_pusher = github.pr_json[:user][:login]
  pr_pusher_avatar = github.pr_json[:user][:avatar_url]
  cur_pusher_pr_count = get_cur_pr_count(pr_pusher)

  message(<<~MARKDOWN)
    ### `#{pr_pusher}` ‚Äî –í—ã –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã üòé!  
    ![#{pr_pusher}](#{pr_pusher_avatar}&s=64)
    –≠—Ç–æ –≤–∞—à **#{cur_pusher_pr_count}-–π PR**. –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –≤–∫–ª–∞–¥ –≤ –ø—Ä–æ–µ–∫—Ç ü§ù
  MARKDOWN

  if files_changed > 0 && files_changed <= 5
    message("### üßπ **Tidy commit**\n–ó–∞—Ç—Ä–æ–Ω—É—Ç–æ —Ç–æ–ª—å–∫–æ **#{files_changed}** —Ñ–∞–π–ª–æ–≤. –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!")
  elsif total_lines > 0 && total_lines < 50
    message("### üå± **Tiny but mighty**\n–ò–∑–º–µ–Ω–µ–Ω–æ –≤—Å–µ–≥–æ **#{total_lines}** —Å—Ç—Ä–æ–∫.")
  elsif total_lines > 1000
    fail("### ‚õîÔ∏è **–°–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π PR**\n–î–æ–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–µ –±–æ–ª–µ–µ 1000 —Å—Ç—Ä–æ–∫ –∑–∞ –æ–¥–∏–Ω PR.")
  end

  if files_changed > 20
    fail("### ‚õîÔ∏è **–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —Ñ–∞–π–ª–æ–≤**\n–î–æ–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–µ –±–æ–ª–µ–µ 20 —Ñ–∞–π–ª–æ–≤ –∑–∞ –æ–¥–∏–Ω PR.")
  end

  if commits > 0 && commits <= 5
    message("### üßπ **–ú–∞–ª–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–º–∏—Ç–æ–≤**\n–¢–æ–ª—å–∫–æ **#{commits}** –∫–æ–º–º–∏—Ç(–æ–≤). –û—Ç–ª–∏—á–Ω–æ!")
  elsif commits > 15
    message("### ‚ö†Ô∏è **–ú–Ω–æ–≥–æ –∫–æ–º–º–∏—Ç–æ–≤**\n–¶–µ–ª—ã—Ö **#{commits}**! –í–ø–µ—á–∞—Ç–ª—è–µ—Ç.")
  end

  if deletions > 500
    fail("### ‚õîÔ∏è **–£–¥–∞–ª–µ–Ω–æ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —Å—Ç—Ä–æ–∫**\n–î–æ–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–µ –±–æ–ª–µ–µ 500 —Å—Ç—Ä–æ–∫ –∑–∞ —Ä–∞–∑.")
  end

  if edited.any? { |f| f.start_with?('.github/workflows/') && f.match?(/\.ya?ml$/) }
    warn("### ‚öôÔ∏è **–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ workflow**\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω–∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã.")
  end

  if edited.any? { |f| f.start_with?('OrbitTests/') }
    message("### üß™ **–ò–∑–º–µ–Ω–µ–Ω—ã —Ç–µ—Å—Ç—ã**\n–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç–µ —Ç–µ—Å—Ç—ã –≤ –∞–∫—Ç—É–∞–ª—å–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏!")
  end

  weekday = Time.now.wday
  if weekday == 5
    message("### üôå **–ü—è—Ç–Ω–∏—á–Ω—ã–π –ø—Ä–∏–≤–µ—Ç!**\n–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É —Ä–∞–±–æ—Ç—É –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ üôå")
  elsif [6, 0].include?(weekday)
    warn("### ‚ö†Ô∏è **–û—Ç–¥—ã—Ö –≤–∞–∂–µ–Ω**\n–°–µ–≥–æ–¥–Ω—è –≤—ã—Ö–æ–¥–Ω–æ–π ‚Äî –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å üòä")
  end
end

check_for_fun_metrics

if github.pr_json[:merged]
  pr_pusher = github.pr_json[:user][:login]
  increment_pr_count(pr_pusher)
  puts "‚úÖ –°—á—ë—Ç—á–∏–∫ PR —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω."
else
  puts "‚ÑπÔ∏è PR –Ω–µ –≤–º–µ—Ä–∂–µ–Ω ‚Äî —Å—á—ë—Ç—á–∏–∫ –Ω–µ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è."
end
